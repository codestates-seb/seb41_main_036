name: client_ci

on:
  push:
    branches:
      - dev_front

jobs:
  deploy:
    name: Build, Deploy to S3 bucket
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm install
        run: npm install
        working-directory: ./Client

      - name: Build
        run: npm run build
        working-directory: ./Client
        env:
          CI: ""

    # build한 후 프로젝트를 압축합니다.
      - name: Make zip file
        run: zip -r ./front-deploy.zip .
        shell: bash
        
    # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # 등록한 Github Secret이 자동으로 불려옵니다.
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
          aws-region: ${{ secrets.AWS_REGION }}

    # 압축한 프로젝트를 S3로 전송합니다.
      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./front-deploy.zip s3://${{ secrets.AWS_S3_BUCKET }}/front-deploy.zip

    # CodeDeploy에게 배포 명령을 내립니다.
      - name: Code Deploy
        run: >
          aws deploy create-deployment --application-name pikcha36
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name pikcha36-group
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=front-deploy.zip
